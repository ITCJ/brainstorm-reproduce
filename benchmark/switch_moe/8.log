Final launch args: --mode throughput --vendor brt --expert 8
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3192, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3192, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3192, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3440, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3440, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3440, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3624, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3624, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3624, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3592, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3592, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3592, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3704, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3704, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3704, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3376, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3376, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3376, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3184, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3184, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3184, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2856, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2856, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2856, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3768, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3768, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3768, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3496, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3496, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3496, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2632, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2632, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2632, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3504, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3504, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3504, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3200, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3200, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3200, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2688, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2688, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2688, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2648, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2648, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2648, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3616, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3616, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3616, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2608, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2608, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2608, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3416, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3416, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3416, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3232, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3232, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3232, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3888, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3888, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3888, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2536, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2536, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2536, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3488, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3488, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3488, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3584, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3584, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3584, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3176, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3176, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3176, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
warmup done, start benchmarking
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3632, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3632, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3632, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2936, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2936, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2936, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3888, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3888, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3888, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3672, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3672, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3672, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3216, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3216, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3216, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3792, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3792, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3792, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2656, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2656, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2656, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3304, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3304, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3304, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3432, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3432, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3432, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3416, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3416, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3416, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3560, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3560, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3560, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3248, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3248, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3248, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3312, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3312, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3312, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3416, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3416, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3416, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3960, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3960, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3960, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3864, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3864, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3864, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2840, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2840, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2840, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3200, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3200, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3200, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3216, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3216, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3216, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3792, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3792, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3792, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3200, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3200, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3200, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3896, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3896, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3896, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3448, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3448, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3448, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3536, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3536, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3536, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3664, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3664, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3664, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3192, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3192, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3192, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3136, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3136, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3136, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3168, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3168, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3168, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3192, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3192, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3192, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3904, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3904, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3904, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3112, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3112, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3112, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3760, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3760, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3760, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2720, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2720, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2720, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3496, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3496, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3496, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3200, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3200, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3200, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3240, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3240, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3240, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3216, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3216, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3216, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3792, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3792, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3792, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3624, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3624, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3624, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3592, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3592, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3592, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3408, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3408, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3408, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3496, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3496, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3496, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3816, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3816, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3816, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3224, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3224, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3224, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2832, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2832, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2832, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3304, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3304, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3304, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2768, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2768, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2768, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3840, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3840, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3840, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2712, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2712, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2712, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3928, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3928, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3928, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3256, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3256, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3256, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3464, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3464, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3464, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2704, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2704, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2704, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3208, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3208, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3208, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2608, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2608, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2608, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3456, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3456, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3456, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2656, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2656, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2656, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3304, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3304, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3304, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2624, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2624, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2624, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3448, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3448, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3448, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2648, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2648, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2648, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3616, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3616, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3616, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2608, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2608, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2608, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3416, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3416, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3416, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3208, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3208, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3208, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2608, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2608, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2608, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3456, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3456, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3456, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3456, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3456, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3456, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3664, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3664, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3664, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3632, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3632, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3632, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3448, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3448, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3448, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3160, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3160, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3160, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3184, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3184, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3184, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3136, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3136, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3136, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3480, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3480, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3480, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3680, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3680, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3680, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3744, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3744, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3744, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3224, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3224, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3224, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3896, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3896, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3896, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3448, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3448, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3448, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3416, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3416, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3416, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3296, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3296, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3296, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3432, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3432, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3432, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3416, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3416, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3416, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2856, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2856, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2856, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3664, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3664, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3664, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3240, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3240, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3240, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3720, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3720, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3720, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3168, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3168, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3168, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3304, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3304, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3304, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3152, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3152, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3152, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3648, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3648, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3648, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2848, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2848, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2848, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3168, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3168, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3168, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3704, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3704, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3704, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3248, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3248, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3248, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3704, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3704, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3704, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3824, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3824, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3824, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3632, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3632, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3632, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3656, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3656, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3656, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3136, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3136, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3136, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3200, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3200, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3200, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2688, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2688, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2688, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3680, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3680, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3680, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3840, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3840, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3840, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2592, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2592, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2592, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3896, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3896, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3896, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3240, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3240, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3240, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3928, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3928, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3928, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2552, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2552, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2552, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3384, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3384, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3384, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3680, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3680, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3680, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3248, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3248, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3248, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3928, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3928, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3928, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2672, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2672, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2672, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3208, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3208, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3208, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2896, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2896, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2896, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2712, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2712, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2712, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3216, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3216, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3216, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3712, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3712, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3712, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3624, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3624, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3624, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3440, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3440, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3440, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3632, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3632, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3632, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3656, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3656, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3656, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3136, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3136, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3136, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3512, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3512, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3512, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3536, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3536, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3536, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3504, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3504, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3504, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3512, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3512, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3512, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2760, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2760, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2760, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3248, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3248, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3248, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2864, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2864, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2864, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2864, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2864, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2864, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3744, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3744, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3744, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3616, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3616, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3616, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3768, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3768, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3768, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2768, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2768, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2768, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3120, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3120, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3120, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3872, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3872, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3872, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2792, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2792, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2792, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3936, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3936, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3936, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2544, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2544, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2544, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3248, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3248, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3248, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3888, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3888, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3888, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3400, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3400, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3400, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3152, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3152, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3152, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3168, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3168, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3168, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3488, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3488, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3488, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3584, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3584, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3584, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3176, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3176, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3176, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3208, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3208, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3208, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2608, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2608, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2608, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3456, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3456, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3456, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3464, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3464, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3464, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3896, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3896, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3896, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3112, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3112, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3112, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3800, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3800, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3800, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3744, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3744, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3744, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2608, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2608, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2608, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3688, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3688, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3688, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3680, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3680, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3680, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2496, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2496, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2496, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3712, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3712, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3712, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3744, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3744, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3744, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2960, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2960, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2960, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3840, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3840, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3840, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3560, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3560, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3560, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2776, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2776, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2776, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3440, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3440, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3440, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3840, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3840, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3840, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3560, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3560, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3560, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3112, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3112, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3112, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3480, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3480, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3480, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3536, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3536, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3536, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3664, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3664, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3664, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3240, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3240, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3240, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3720, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3720, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3720, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3168, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3168, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3168, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3304, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3304, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3304, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2856, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2856, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2856, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3664, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3664, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3664, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3464, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3464, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3464, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3896, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3896, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3896, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3112, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3112, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3112, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3456, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3456, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3456, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3664, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3664, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3664, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3632, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3632, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3632, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3448, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3448, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3448, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2960, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2960, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2960, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3368, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3368, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3368, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3488, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3488, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3488, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3584, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3584, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3584, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3176, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3176, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3176, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3888, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3888, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3888, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3856, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3856, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3856, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3936, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3936, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3936, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3920, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3920, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3920, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3704, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3704, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3704, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3376, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3376, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3376, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3184, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3184, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3184, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2856, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2856, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2856, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3768, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3768, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3768, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3992, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3992, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3992, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2768, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2768, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2768, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3696, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3696, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3696, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3624, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3624, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3624, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2728, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2728, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2728, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3592, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3592, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3592, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3176, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3176, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3176, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3296, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3296, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3296, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2848, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2848, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2848, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3384, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3384, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3384, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3120, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3120, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3120, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3712, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3712, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3712, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3624, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3624, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3624, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3160, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3160, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3160, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3184, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3184, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3184, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3488, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3488, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3488, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3584, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3584, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3584, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3176, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3176, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3176, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3568, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3568, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3568, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3840, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3840, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3840, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3824, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3824, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3824, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3968, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3968, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3968, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3296, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3296, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3296, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2976, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2976, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2976, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3216, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3216, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3216, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3792, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3792, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3792, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3752, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3752, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3752, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3328, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3328, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3328, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3944, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3944, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3944, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4024, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4024, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4024, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4048, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4048, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4048, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3120, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3120, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3120, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3720, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3720, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3720, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2736, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2736, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2736, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3216, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3216, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3216, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3648, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3648, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3648, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3680, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3680, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3680, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2856, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2856, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2856, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3672, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3672, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3672, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3720, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3720, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3720, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3152, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3152, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3152, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3496, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3496, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3496, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3200, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3200, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3200, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4032, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4032, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4032, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3240, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3240, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3240, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3784, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3784, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3784, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3000, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3000, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3000, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3112, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3112, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3112, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4064, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4064, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4064, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3480, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3480, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3480, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3520, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3520, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3520, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3136, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3136, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3136, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3688, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3688, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3688, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3832, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3832, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3832, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3424, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3424, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3424, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2912, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2912, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2912, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3600, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3600, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3600, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3864, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3864, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3864, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2544, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2544, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2544, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3744, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3744, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3744, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3880, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3880, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3880, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3192, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3192, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3192, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3640, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3640, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3640, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3016, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3016, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3016, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([2576, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([2576, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([2576, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3288, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3288, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3288, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4080, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4080, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4080, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4072, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4072, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4072, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3008, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3008, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3008, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3192, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3192, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3192, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3952, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3952, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3952, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3984, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3984, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3984, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3472, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3472, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3472, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4056, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4056, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4056, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4040, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4040, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4040, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([3808, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([3808, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([3808, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4096, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4096, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4096, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------Apply Feed Forward layer---------
hidden_states.shape: torch.Size([8, 128, 768])
------------------------------------------
---------SwitchTransformersLayerFF---------
hidden_states.shape: torch.Size([8, 128, 768])
forwarded_states.shape: torch.Size([8, 128, 768])
---------ScatterRouter---------
in_flows.shape: torch.Size([1024, 768])
score.shape: torch.Size([1024, 8])
hot_mask.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric input---------
in_flow.shape: torch.Size([1024, 768])
hot_mask.shape: torch.Size([1024, 8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------DispatchFabric stage 1---------
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
--------------------------------------------------
---------dispatch@FusedDispatchFabric---------
flow.shape: torch.Size([1024, 768])
route_indices.shape: torch.Size([1024, 8])
loads.shape: torch.Size([8])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
---------dispatch@flows_for@FusedDispatchFabric---------
flow_data.shape: torch.Size([1024, 768])
type(flow_tag_stack): <class 'list'>
flow_tag_stack: [None]
flow_load_stack: [None]
extra_attr_dict: {}
--------------------------------------------------
---------dispatch@routed_data@FusedDispatchFabric---------
routed_data.shape: torch.Size([4088, 768])
--------------------------------------------------
---------dispatch@out_flow@FusedDispatchFabric---------
out_flow.shape: torch.Size([4088, 768])
--------------------------------------------------
---------DispatchFabric stage 2---------
all_out_flows.shape: torch.Size([4088, 768])
score.shape: torch.Size([1024, 8])
--------------------------------------------------
------------------------------------------
